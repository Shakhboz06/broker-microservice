{{/* {{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Broker</a>
                <a id="authBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Auth</a>
                <div id="output" class="mt-5" style="outline: 1px solid silver padding: 2em">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver padding: 2em">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver padding: 2em">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
        let brokerBtn = document.getElementById("brokerBtn")
        let authBtn = document.getElementById("authBtn")
        let output = document.getElementById("output")
        let sent = document.getElementById("payload")
        let received = document.getElementById("received")

        const payload = {
            action: "auth",
            auth: {
                email: "admin@example.com",
                password: "verysecret",
            }
        }

        


        const postData = async () =>{
            try{
                const response = await fetch("http://localhost:8085/handle", {
                    method: "POST",
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(payload)
                })

                sent.innerHTML = JSON.stringify(payload, undefined, 4)
                const data = await response.json()
                output.innerHTML += `<br><strong> Response from broker service</strong>: ${data.message}`
                received.innerHTML = JSON.stringify(data, undefined, 4)

            }catch(error){
                console.log(error)
                output.innerHTML += `<br><strong> Response from broker service</strong>: ${error}`
            }

        }

        brokerBtn.onclick = () => postData()

    </script>
{{end}} */}}


{{template "base" .}}

{{define "content" }}
    <div class="container">
        <div class="row">
            <div class="col">
                <h1 class="mt-5">Test microservices</h1>
                <hr>
                <a id="brokerBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Broker</a>
                <a id="authBrokerBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Auth</a>
                <a id="logBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Log</a>
                <a id="mailBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Test Message</a>
                <a id="grpcBtn" class="btn btn-outline-secondary" href="javascript:void(0)">Log with gRPC</a>
                <div id="output" class="mt-5" style="outline: 1px solid silver padding: 2em">
        <div class="row">
                    <span class="text-muted">Output shows here...</span>
                </div>
            </div>
        </div>
            <div class="col">
                <h4 class="mt-5">Sent</h4>
                <div class="mt-1" style="outline: 1px solid silver padding: 2em">
                    <pre id="payload"><span class="text-muted">Nothing sent yet...</span></pre>
                </div>
            </div>
            <div class="col">
                <h4 class="mt-5">Received</h4>
                <div class="mt-1" style="outline: 1px solid silver padding: 2em">
                    <pre id="received"><span class="text-muted">Nothing received yet...</span></pre>
                </div>
            </div>
        </div>
    </div>
{{end}}

{{define "js"}}
    <script>
  const brokerBtn     = document.getElementById("brokerBtn")
  const authBtn       = document.getElementById("authBrokerBtn")
  const logBtn        = document.getElementById("logBtn")
  const mailBtn        = document.getElementById("mailBtn")
  const gprcBtn        = document.getElementById("grpcBtn")
  const output        = document.getElementById("output")
  const sentPre       = document.getElementById("payload")
  const receivedPre   = document.getElementById("received")

  brokerBtn.onclick = () => {
    fetch({{.BrokerURL}}, { method: "POST" })
      .then(r => r.json())
      .then(data => {
        sentPre.textContent     = "empty post request"
        receivedPre.textContent = JSON.stringify(data, null, 2)
        output.innerHTML       += `<br><strong>Broker:</strong> ${data.message}`
      })
      .catch(err => output.innerHTML += `<br><strong>Error:</strong> ${err}`)
  }

  authBtn.onclick = () => {
    const payload = {
      action: "auth",
      auth: { email: "admin@example.com", password: "verysecret" }
    }
    fetch({{print .BrokerURL "/handle"}}, {
      method:  "POST",
      headers: { "Content-Type": "application/json" },
      body:    JSON.stringify(payload),
    })
    .then(r => r.json())
    .then(data => {
      sentPre.textContent     = JSON.stringify(payload, null, 2)
      receivedPre.textContent = JSON.stringify(data, null, 2)
      output.innerHTML       += `<br><strong>Auth:</strong> ${data.message}`
    })
    .catch(err => output.innerHTML += `<br><strong>Error:</strong> ${err}`)
  }

  logBtn.onclick = () => {
    const payload = {
      action: "log",
      log:  {
        name: "event",
        data: "Some kind of data",
      }
    }
    fetch({{print .BrokerURL "/handle"}}, {
      method:  "POST",
      headers: { "Content-Type": "application/json" },
      body:    JSON.stringify(payload),
    })
    .then(r => r.json())
    .then(data => {
      sentPre.textContent     = JSON.stringify(payload, null, 2)
      receivedPre.textContent = JSON.stringify(data, null, 2)
      output.innerHTML       += `<br><strong>Log:</strong> ${data.message}`
    })
    .catch(err => output.innerHTML += `<br><strong>Error:</strong> ${err}`)
  }

  grpcBtn.onclick = () => {
    const payload = {
      action: "log",
      log:  {
        name: "event",
        data: "Some kind of gRPC data",
      }
    }
    fetch({{print .BrokerURL "/log-grpc"}}, {
      method:  "POST",
      headers: { "Content-Type": "application/json" },
      body:    JSON.stringify(payload),
    })
    .then(r => r.json())
    .then(data => {
      sentPre.textContent     = JSON.stringify(payload, null, 2)
      receivedPre.textContent = JSON.stringify(data, null, 2)
      output.innerHTML       += `<br><strong>Log:</strong> ${data.message}` 
    })
    .catch(err => output.innerHTML += `<br><strong>Error:</strong> ${err}`)
  }

   mailBtn.onclick = () => {
    const payload = {
      action: "mail",
      mail:  {
        from: "john@atkins.com",
	    to: "david@abc.me",
	    subject: "My application",
	    message: "Hi, there. I am checking my message!!!",
      }
    }
    fetch({{print .BrokerURL "/handle"}}, {
      method:  "POST",
      headers: { "Content-Type": "application/json" },
      body:    JSON.stringify(payload),
    })
    .then(r => r.json())
    .then(data => {
      sentPre.textContent     = JSON.stringify(payload, null, 2)
      receivedPre.textContent = JSON.stringify(data, null, 2)
      output.innerHTML       += `<br><strong>Log:</strong> ${data.message}`
    })
    .catch(err => output.innerHTML += `<br><strong>Error:</strong> ${err}`)
  }
</script>
{{end}}
